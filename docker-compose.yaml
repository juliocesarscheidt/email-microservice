version: '3.4'

services:
  email-microservice:
    container_name: email-microservice
    hostname: email-microservice
    image: juliocesarmidia/email-microservice:latest
    build:
      context: ./
    restart: on-failure
    networks:
      - subnet_0
    ports:
      - 8000:8000
    environment:
      JAVA_OPTIONS: -Xmx400m
      JDBC_HOST: ${JDBC_HOST:-postgres}
      JDBC_PORT: ${JDBC_PORT:-5432}
      JDBC_USER: ${JDBC_USER:-postgres}
      JDBC_PASS: ${JDBC_PASS:-postgres}
      JDBC_DATABASE: ${JDBC_DATABASE:-email_microservice}
      TZ: America/Sao_Paulo
      SPRING_BOOT_ENVIRONMENT: Development
    volumes:
      - ~/.m2:/root/.m2

  postgres:
    image: postgres:9.6-alpine
    container_name: postgres
    hostname: postgres
    environment:
      POSTGRES_USER: ${JDBC_USER:-postgres}
      POSTGRES_PASSWORD: ${JDBC_PASS:-postgres}
      POSTGRES_DB: ${JDBC_DATABASE:-email_microservice}
    networks:
      - subnet_0
    restart: on-failure
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data:rw
      # - ./postgres/init.sql:/docker-entrypoint-initdb.d/init.sql:rw

  prometheus:
    container_name: prometheus
    hostname: prometheus
    image: prom/prometheus:latest
    command: [
      "--config.file=/prometheus-config/prometheus.yaml",
      "--web.config.file=/prometheus-config/web.yaml"
    ]
    restart: on-failure
    networks:
      - subnet_0
    ports:
      - 9090:9090
    volumes:
      - ./prometheus/:/prometheus-config
      - prometheus-data:/prometheus

networks:
  subnet_0:
    driver: bridge

volumes:
  postgres-data: {}
  prometheus-data: {}
